filter{
  if [type] == "syslog"{
       grok{
         patterns_dir => ["/opt/logstash/config/pattern"]
         match => {"message"=> "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp}%{SPACE}%{HOSTNAME:hostname}%{SPACE}%{GREEDYDATA:syslog}"}
       }
       syslog_pri{
       }
      ruby{
         code => "event['src'] = event['hostname'].split('-')[-1]"
      }
      ruby{
         code => "event['stackId'] = event['hostname'].gsub('-'+event['src'],'')"
      }
      if [message] =~ "[drop]" {
        ruby{
           code => "item=event['syslog'];start=item.index('SRC'); term=item.index('LEN'); delta=term-start;keys = item[start,delta].rstrip;items = keys.split; items.each do |it|; kvs = it.split('=');event[kvs[0]]=kvs[1];end"
        }

      
        mutate{
          add_field => {"whitelist" => ["SRC","DST"]}
        }

    } 
      mutate{
           rename => {"syslog_severity_code" => "severity"
                      "syslog_pri" => "priority"
                      "syslog_facility_code" => "facility"
                      "syslog_facility" => "facility_label"
                      "syslog_severity" => "severity_label"
                      }
           add_field => {"whitelist" => ["priority","facility","severity_label","facility_label","hostname","stackId"]}
      }
  }
}
